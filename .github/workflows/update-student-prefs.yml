name: Update Student Preferences

on:
  repository_dispatch:
    types: [update_student_prefs]

permissions:
  contents: write

concurrency:
  group: update-student-prefs-${{ github.ref }}
  cancel-in-progress: false

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log payload
        run: |
          echo "Payload received:"
          echo '${{ toJson(github.event.client_payload) }}'

      - name: Parse payload and update JSON
        env:
          PAYLOAD: ${{ toJson(github.event.client_payload) }}
        run: |
          set -e
          echo "$PAYLOAD" > payload.json
          # Expected payload: { "studentId": "STUDENT_ID", "patch": { ... } }
          SID=$(jq -r '.studentId' payload.json)
          test -n "$SID"
          PATH_JSON="modular/data/prefs/students/${SID}.json"
          jq '.patch' payload.json > patch.json

          # Ensure file exists
          if [ ! -f "$PATH_JSON" ]; then
            mkdir -p "$(dirname "$PATH_JSON")"
            echo '{}' > "$PATH_JSON"
          fi

          # Merge patch into existing JSON (deep merge at top level)
          jq -s '.[0] * .[2]' "$PATH_JSON" patch.json > merged.json
          mv merged.json "$PATH_JSON"

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add modular/data/prefs/students
          git commit -m "Update student preferences via dispatch"
          git push
